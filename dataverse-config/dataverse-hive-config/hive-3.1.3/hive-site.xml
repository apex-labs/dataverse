<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?><!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
--><configuration>
  <!-- WARNING!!! This file is auto generated for documentation purposes ONLY! -->
  <!-- WARNING!!! Any changes you make to this file will be ignored by Hive.   -->
  <!-- WARNING!!! You must make your changes in hive-site.xml instead.         -->
  <!-- Hive Execution Parameters -->

  <property>
    <name>hive.metastore.db.type</name>
    <value>mysql</value>
    <description>
      Expects one of [derby, oracle, mysql, mssql, postgres].
      Type of database used by the metastore. Information schema &amp; JDBCStorageHandler depend on it.
    </description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionURL</name>
    <value>jdbc:mysql://10.25.19.1:3306/ecommerce_dev?tinyInt1isBit=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</value>
    <description>
      JDBC connect string for a JDBC metastore.
      To use SSL to encrypt/authenticate the connection, provide database-specific SSL flag in the connection URL.
      For example, jdbc:postgresql://myhost/db?ssl=true for postgres database.
    </description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionDriverName</name>
    <value>com.mysql.cj.jdbc.Driver</value>
    <description>Driver class name for a JDBC metastore</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionUserName</name>
    <value>dev</value>
    <description>Username to use against metastore database</description>
  </property>

  <property>
    <name>javax.jdo.option.ConnectionPassword</name>
    <value>123456</value>
    <description>password to use against metastore database</description>
  </property>

  <property>
    <name>hive.metastore.schema.verification</name>
    <value>true</value>
    <description>
      Enforce metastore schema version consistency.
      True: Verify that version information stored in is compatible with one from Hive jars.  Also disable automatic
      schema migration attempt. Users are required to manually migrate schema after Hive upgrade which ensures
      proper metastore schema migration. (Default)
      False: Warn if the version information stored in metastore doesn't match with one from in Hive jars.
    </description>
  </property>

  <property>
    <name>hive.metastore.event.db.notification.api.auth</name>
    <value>true</value>
    <description>
      Should metastore do authorization against database notification related APIs such as get_next_notification.
      If set to true, then only the superusers in proxy settings have the permission
    </description>
  </property>

  <property>
    <name>hive.metastore.uris</name>
    <value>thrift://nn1:9083,thrift://nn2:9083,thrift://nn3:9083</value>
    <description>Thrift URI for the remote metastore. Used by metastore client to connect to remote metastore.</description>
  </property>

  <property>
    <name>hive.metastore.port</name>
    <value>9083</value>
    <description>Hive metastore listener port</description>
  </property>

  <property>
    <name>hive.metastore.warehouse.dir</name>
    <value>/user/hive/warehouse</value>
    <description>location of default database for the warehouse</description>
  </property>

  <property>
    <name>hive.metastore.server.max.message.size</name>
    <value>104857600</value>
    <description>Maximum message size in bytes a HMS will accept.</description>
  </property>
  <property>
    <name>hive.metastore.server.min.threads</name>
    <value>100</value>
    <description>Minimum number of worker threads in the Thrift server's pool.</description>
  </property>
  <property>
    <name>hive.metastore.server.max.threads</name>
    <value>200</value>
    <description>Maximum number of worker threads in the Thrift server's pool.</description>
  </property>
  <property>
    <name>hive.metastore.server.tcp.keepalive</name>
    <value>true</value>
    <description>Whether to enable TCP keepalive for the metastore server. Keepalive will prevent accumulation of half-open connections.</description>
  </property>

  <property>
    <name>hive.metastore.client.cache.enabled</name>
    <value>true</value>
    <description>Whether to enable metastore client cache</description>
  </property>

  <property>
    <name>hive.metastore.client.cache.expiry.time</name>
    <value>120s</value>
    <description>
      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.
      Expiry time for metastore client cache
    </description>
  </property>
  <property>
    <name>hive.metastore.client.cache.initial.capacity</name>
    <value>50</value>
    <description>Initial capacity for metastore client cache</description>
  </property>
  <property>
    <name>hive.metastore.client.cache.max.capacity</name>
    <value>50</value>
    <description>Max capacity for metastore client cache</description>
  </property>

  <property>
    <name>hive.metastore.connect.retries</name>
    <value>3</value>
    <description>Number of retries while opening a connection to metastore</description>
  </property>

  <property>
    <name>hive.cli.print.header</name>
    <value>true</value>
    <description>Whether to print the names of the columns in query output.</description>
  </property>

  <!-- HiveServer2 -->
  <property>
    <name>hive.server2.support.dynamic.service.discovery</name>
    <value>true</value>
    <description>Whether HiveServer2 supports dynamic service discovery for its clients. To support this, each instance of HiveServer2 currently uses ZooKeeper to register itself, when it is brought up. JDBC/ODBC clients should use the ZooKeeper ensemble: hive.zookeeper.quorum in their connection string.</description>
  </property>

  <property>
    <name>hive.server2.zookeeper.namespace</name>
    <value>hiveserver2</value>
    <description>The parent node in ZooKeeper used by HiveServer2 when supporting dynamic service discovery.</description>
  </property>

  <property>
    <name>hive.server2.thrift.bind.host</name>
    <value>nn1</value>
    <description>Bind host on which to run the HiveServer2 Thrift service.</description>
  </property>
  <property>
    <name>hive.server2.thrift.port</name>
    <value>10000</value>
    <description>Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'binary'.</description>
  </property>

  <property>
    <name>hive.server2.thrift.http.port</name>
    <value>10001</value>
    <description>Port number of HiveServer2 Thrift interface when hive.server2.transport.mode is 'http'.</description>
  </property>

  <property>
    <name>hive.server2.thrift.min.worker.threads</name>
    <value>5</value>
    <description>Minimum number of Thrift worker threads</description>
  </property>
  <property>
    <name>hive.server2.thrift.max.worker.threads</name>
    <value>500</value>
    <description>Maximum number of Thrift worker threads</description>
  </property>

  <property>
    <name>hive.server2.authentication</name>
    <value>NONE</value>
    <description>
      Expects one of [nosasl, none, ldap, kerberos, pam, custom].
      Client authentication types.
      NONE: no authentication check
      LDAP: LDAP/AD based authentication
      KERBEROS: Kerberos/GSSAPI authentication
      CUSTOM: Custom authentication provider
      (Use with property hive.server2.custom.authentication.class)
      PAM: Pluggable authentication module
      NOSASL:  Raw transport
    </description>
  </property>

  <property>
    <name>hive.server2.thrift.client.user</name>
    <value>anonymous</value>
    <description>Username to use against thrift client</description>
  </property>
  <property>
    <name>hive.server2.thrift.client.password</name>
    <value>anonymous</value>
    <description>Password to use against thrift client</description>
  </property>

<!--  <property>-->
<!--    <name>hive.server2.webui.host</name>-->
<!--    <value>nn3</value>-->
<!--    <description>The host address the HiveServer2 WebUI will listen on</description>-->
<!--  </property>-->
<!--  <property>-->
<!--    <name>hive.server2.webui.port</name>-->
<!--    <value>10002</value>-->
<!--    <description>The port the HiveServer2 WebUI will listen on. This can beset to 0 or a negative integer to disable the web UI</description>-->
<!--  </property>-->
<!--  <property>-->
<!--    <name>hive.server2.webui.max.threads</name>-->
<!--    <value>50</value>-->
<!--    <description>The max HiveServer2 WebUI threads</description>-->
<!--  </property>-->
<!--  <property>-->
<!--    <name>hive.server2.webui.use.ssl</name>-->
<!--    <value>false</value>-->
<!--    <description>Set this to true for using SSL encryption for HiveServer2 WebUI.</description>-->
<!--  </property>-->

  <property>
    <name>hive.zookeeper.quorum</name>
    <value>zk1:2181,zk2:2181,zk3:2181,zk4:2181,zk5:2181</value>
    <description>
      List of ZooKeeper servers to talk to. This is needed for:
      1. Read/write locks - when hive.lock.manager is set to
      org.apache.hadoop.hive.ql.lockmgr.zookeeper.ZooKeeperHiveLockManager,
      2. When HiveServer2 supports service discovery via Zookeeper.
      3. For delegation token storage if zookeeper store is used, if
      hive.cluster.delegation.token.store.zookeeper.connectString is not set
      4. LLAP daemon registry service
      5. Leader selection for privilege synchronizer
    </description>
  </property>
  <property>
    <name>hive.zookeeper.client.port</name>
    <value>2181</value>
    <description>
      The port of ZooKeeper servers to talk to.
      If the list of Zookeeper servers specified in hive.zookeeper.quorum
      does not contain port numbers, this value is used.
    </description>
  </property>
  <property>
    <name>hive.zookeeper.session.timeout</name>
    <value>1200000ms</value>
    <description>
      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is msec if not specified.
      ZooKeeper client's session timeout (in milliseconds). The client is disconnected, and as a result, all locks released,
      if a heartbeat is not sent in the timeout.
    </description>
  </property>
  <property>
    <name>hive.zookeeper.connection.timeout</name>
    <value>15s</value>
    <description>
      Expects a time value with unit (d/day, h/hour, m/min, s/sec, ms/msec, us/usec, ns/nsec), which is sec if not specified.
      ZooKeeper client's connection timeout in seconds. Connection timeout * hive.zookeeper.connection.max.retries
      with exponential backoff is when curator client deems connection is lost to zookeeper.
    </description>
  </property>
  <property>
    <name>hive.zookeeper.namespace</name>
    <value>hive_zookeeper_namespace</value>
    <description>The parent node under which all ZooKeeper nodes are created.</description>
  </property>

</configuration>
